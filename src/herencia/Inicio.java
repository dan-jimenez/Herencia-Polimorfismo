
package herencia;

import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.LinkedList;
import java.util.Queue;
import javax.swing.JFrame;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

/**
 *
 * @author Danny Jimenez
 */
public class Inicio extends JFrame {
    
    private  Queue <Cliente> colaCliente;
    public Inicio() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pMain = new javax.swing.JPanel();
        pLeft = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tMenu = new javax.swing.JTextArea();
        bCargarMenu = new javax.swing.JButton();
        lCanClientes = new javax.swing.JLabel();
        eClientes = new javax.swing.JTextField();
        bCrearClientes = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        pCenter = new javax.swing.JPanel();
        pRight = new javax.swing.JPanel();
        bExit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);
        setBackground(new java.awt.Color(25, 59, 45));
        setFocusTraversalPolicyProvider(true);
        setName("fPrincipal"); // NOI18N
        setUndecorated(true);
        setResizable(false);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });

        pMain.setBackground(new java.awt.Color(25, 59, 45));

        pLeft.setBackground(new java.awt.Color(26, 184, 120));
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("herencia/Bundle"); // NOI18N
        pLeft.setToolTipText(bundle.getString("Inicio.pLeft.toolTipText")); // NOI18N

        tMenu.setEditable(false);
        tMenu.setBackground(new java.awt.Color(26, 184, 120));
        tMenu.setColumns(20);
        tMenu.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tMenu.setForeground(new java.awt.Color(255, 255, 255));
        tMenu.setLineWrap(true);
        tMenu.setRows(5);
        tMenu.setAutoscrolls(false);
        tMenu.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 2, true));
        tMenu.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(tMenu);

        bCargarMenu.setBackground(new java.awt.Color(255, 255, 255));
        bCargarMenu.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        bCargarMenu.setText(bundle.getString("Inicio.bCargarMenu.text")); // NOI18N
        bCargarMenu.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        bCargarMenu.setBorderPainted(false);
        bCargarMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCargarMenuActionPerformed(evt);
            }
        });

        lCanClientes.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lCanClientes.setForeground(new java.awt.Color(255, 255, 255));
        lCanClientes.setText(bundle.getString("Inicio.lCanClientes.text")); // NOI18N

        eClientes.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        eClientes.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        eClientes.setText(bundle.getString("Inicio.eClientes.text")); // NOI18N
        eClientes.setToolTipText(bundle.getString("Inicio.eClientes.toolTipText")); // NOI18N
        eClientes.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 1, 0));

        bCrearClientes.setBackground(new java.awt.Color(255, 255, 255));
        bCrearClientes.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        bCrearClientes.setText(bundle.getString("Inicio.bCrearClientes.text")); // NOI18N
        bCrearClientes.setBorder(null);
        bCrearClientes.setBorderPainted(false);
        bCrearClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCrearClientesActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton1.setText(bundle.getString("Inicio.jButton1.text")); // NOI18N
        jButton1.setBorder(null);
        jButton1.setBorderPainted(false);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icon.png"))); // NOI18N
        jLabel1.setText(bundle.getString("Inicio.jLabel1.text")); // NOI18N

        javax.swing.GroupLayout pLeftLayout = new javax.swing.GroupLayout(pLeft);
        pLeft.setLayout(pLeftLayout);
        pLeftLayout.setHorizontalGroup(
            pLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pLeftLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(pLeftLayout.createSequentialGroup()
                        .addGroup(pLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pLeftLayout.createSequentialGroup()
                                .addGap(139, 139, 139)
                                .addComponent(lCanClientes))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pLeftLayout.createSequentialGroup()
                                .addComponent(bCargarMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(eClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(bCrearClientes, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(pLeftLayout.createSequentialGroup()
                .addGap(190, 190, 190)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pLeftLayout.setVerticalGroup(
            pLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pLeftLayout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 476, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lCanClientes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bCargarMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bCrearClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(192, Short.MAX_VALUE))
        );

        pCenter.setBackground(new java.awt.Color(26, 184, 120));

        javax.swing.GroupLayout pCenterLayout = new javax.swing.GroupLayout(pCenter);
        pCenter.setLayout(pCenterLayout);
        pCenterLayout.setHorizontalGroup(
            pCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 450, Short.MAX_VALUE)
        );
        pCenterLayout.setVerticalGroup(
            pCenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        pRight.setBackground(new java.awt.Color(26, 184, 120));

        bExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/exit.png"))); // NOI18N
        bExit.setMnemonic('x');
        bExit.setText(bundle.getString("Inicio.bExit.text")); // NOI18N
        bExit.setBorder(null);
        bExit.setBorderPainted(false);
        bExit.setContentAreaFilled(false);
        bExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pRightLayout = new javax.swing.GroupLayout(pRight);
        pRight.setLayout(pRightLayout);
        pRightLayout.setHorizontalGroup(
            pRightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pRightLayout.createSequentialGroup()
                .addContainerGap(352, Short.MAX_VALUE)
                .addComponent(bExit)
                .addContainerGap())
        );
        pRightLayout.setVerticalGroup(
            pRightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pRightLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bExit)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pMainLayout = new javax.swing.GroupLayout(pMain);
        pMain.setLayout(pMainLayout);
        pMainLayout.setHorizontalGroup(
            pMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pMainLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pLeft, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(pCenter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pRight, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pMainLayout.setVerticalGroup(
            pMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pMainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pCenter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pLeft, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pRight, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    int xx, yy;
    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        xx = evt.getX();
        yy = evt.getY();
    }//GEN-LAST:event_formMousePressed

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        
        this.setLocation(x-xx,y-yy);
    }//GEN-LAST:event_formMouseDragged

    private void bExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bExitActionPerformed
       System.exit(0);
    }//GEN-LAST:event_bExitActionPerformed
     /* 
    
    En el boton Cargar se hace la carga del menu a partir del archivo .Json
    que antes esta predefinido
    */
    private void bCargarMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCargarMenuActionPerformed
        
        JSONParser parser = new JSONParser();
        
        if (tMenu.getText().length() == 0){
            try{
                Object menu = parser.parse(new FileReader("menu.json"));
                JSONObject jsonMenu = (JSONObject) menu;
                JSONArray bebidas = (JSONArray) jsonMenu.get("Bebidas");
                JSONArray platoFuerte = (JSONArray) jsonMenu.get("Platos Fuertes");
                JSONArray acompañamientos = (JSONArray) jsonMenu.get("Acompañamientos");
                /*
                En esta parte obtiene la parte de bebidas del menu
                */
                tMenu.append("\n\n" +
                        " - - - - - - - - - - - - - - - - - - - - "
                        + " Bebidas "
                        + "- - - - - - - - - - - - - - - - - - -\n" +
                        " Nombre - - - Codigo - - - Precio - - - Tamaño - - - Tipo\n" 
                        + " - - - - - - - - - - - - - - - - - - - - - - - "
                        + "- - - - - - - - - - - - - - - - - - - - - - - \n");


                for (int i = 0; i < bebidas.size() ; i++){
                    JSONObject jsonBebida = (JSONObject) bebidas.get(i);
                    String sBebida = (String) jsonBebida.get("Nombre");
                    tMenu.append(sBebida + " -- ");
                    sBebida = (String) jsonBebida.get("Codigo");
                    tMenu.append(sBebida + " -- ");
                    sBebida = (String) jsonBebida.get("Precio");
                    tMenu.append("₡" + sBebida  + " -- ");
                    sBebida = (String) jsonBebida.get("Tamaño");
                    tMenu.append(sBebida + " -- ");
                    sBebida = (String) jsonBebida.get("Tipo");
                    tMenu.append(sBebida);
                    tMenu.append("\n");

                }
                tMenu.append("\n");

                /*
                En esta parte obtiene la parte de Platos Fuertes del menu
                */


                tMenu.append(" - - - - - - - - - - - - - - - - -"
                        + " Platos Fuertes "
                        + "- - - - - - - - - - - - - - - - -\n"
                        + " Nombre - - - Codigo - - - Precio - - - Tamaño \n" 
                        + " - - - - - - - - - - - - - - - - - - - - - - - "
                        + "- - - - - - - - - - - - - - - - - - - - - - - \n");

                for (int i = 0; i < platoFuerte.size() ; i++){
                    JSONObject jsonPFuerte = (JSONObject) platoFuerte.get(i);
                    String sPFuerte = (String) jsonPFuerte.get("Nombre");
                    tMenu.append(sPFuerte + " -- ");
                    sPFuerte = (String) jsonPFuerte.get("Codigo");
                    tMenu.append(sPFuerte + " -- ");
                    sPFuerte = (String) jsonPFuerte.get("Precio");
                    tMenu.append("₡" + sPFuerte  + " -- ");
                    sPFuerte = (String) jsonPFuerte.get("Tamaño");
                    tMenu.append(sPFuerte);
                    tMenu.append("\n");

                }
                tMenu.append("\n");

                /*
                En esta parte obtiene la parte de Acompañamientos del menu
                */
                tMenu.append(" - - - - - - - - - - - - - - - - "
                        + " Acompañamientos "
                        + "- - - - - - - - - - - - - - - \n"
                        + " Nombre - - - Codigo - - - Precio - - - Tipo \n" 
                        + " - - - - - - - - - - - - - - - - - - - - - - - "
                        + "- - - - - - - - - - - - - - - - - - - - - - - \n");

                for (int i = 0; i < acompañamientos.size() ; i++){
                    JSONObject jsonAcompañamiento = (JSONObject) acompañamientos.get(i);
                    String sAcompañamiento = (String) jsonAcompañamiento.get("Nombre");
                    tMenu.append(sAcompañamiento + " -- ");
                    sAcompañamiento = (String) jsonAcompañamiento.get("Codigo");
                    tMenu.append(sAcompañamiento + " -- ");
                    sAcompañamiento = (String) jsonAcompañamiento.get("Precio");
                    tMenu.append("₡" + sAcompañamiento  + " -- ");
                    sAcompañamiento = (String) jsonAcompañamiento.get("Tipo");
                    tMenu.append(sAcompañamiento);
                    tMenu.append("\n");
                }
                tMenu.append("\n"); 
            } catch (FileNotFoundException e){}
            catch (IOException | ParseException e) {}
        } 
    }//GEN-LAST:event_bCargarMenuActionPerformed

    private void bCrearClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCrearClientesActionPerformed
       colaCliente = new LinkedList();
       
       int cantidadClientes = Integer.parseInt(eClientes.getText());
       int clientesEspeciales = (int) Math.floor(Math.random() * cantidadClientes );
      
       for(int i = 0; i < (cantidadClientes - clientesEspeciales) ; i++){
           colaCliente.add(new Cliente(20));
       }
       
       for (int i = 0; i < clientesEspeciales; i++){
           colaCliente.add(new ClienteEspecial(50,20));
       }
       
       
       
       
    }//GEN-LAST:event_bCrearClientesActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton bCargarMenu;
    public javax.swing.JButton bCrearClientes;
    public javax.swing.JButton bExit;
    public javax.swing.JTextField eClientes;
    public javax.swing.JButton jButton1;
    public javax.swing.JLabel jLabel1;
    public javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JLabel lCanClientes;
    public javax.swing.JPanel pCenter;
    public javax.swing.JPanel pLeft;
    public javax.swing.JPanel pMain;
    public javax.swing.JPanel pRight;
    public javax.swing.JTextArea tMenu;
    // End of variables declaration//GEN-END:variables
}
